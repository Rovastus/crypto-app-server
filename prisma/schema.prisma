generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_WITH_SCHEMA")
}

model Portpholio {
  id            BigInt          @id @default(autoincrement()) @db.BigInt
  name          String          @unique
  taxMethod     TaxMethod
  fiat          Fiat
  files         File[]
  wallet        Wallet[]
  walletHistory WalletHistory[]
}

model File {
  id           BigInt        @id @default(autoincrement()) @db.BigInt
  name         String        @unique
  jsonData     String
  portpholioId BigInt
  portpholio   Portpholio    @relation(fields: [portpholioId], references: [id])
  earn         Earn[]
  transaction  Transaction[]
  transfer     Transfer[]
}

model Wallet {
  id              BigInt     @id @default(autoincrement()) @db.BigInt
  coin            String
  amount          Decimal    @db.Decimal(65, 20)
  avcoFiatPerUnit Decimal    @db.Decimal(65, 20)
  totalFiat       Decimal    @db.Decimal(65, 20)
  portpholioId    BigInt
  portpholio      Portpholio @relation(fields: [portpholioId], references: [id])

  @@unique([portpholioId, coin], name: "portpholioId_coin_unique")
}

model WalletHistory {
  id                 BigInt     @id @default(autoincrement()) @db.BigInt
  coin               String
  oldAmount          Decimal    @db.Decimal(65, 20)
  oldAvcoFiatPerUnit Decimal    @db.Decimal(65, 20)
  oldTotalFiat       Decimal    @db.Decimal(65, 20)
  newAmount          Decimal    @db.Decimal(65, 20)
  newAvcoFiatPerUnit Decimal    @db.Decimal(65, 20)
  newTotalFiat       Decimal    @db.Decimal(65, 20)
  time               DateTime
  portpholioId       BigInt
  portpholio         Portpholio @relation(fields: [portpholioId], references: [id])
}

model Transaction {
  id                  BigInt                @id @default(autoincrement()) @db.BigInt
  buy                 Decimal               @db.Decimal(65, 20)
  buyCoin             String
  price               Decimal               @db.Decimal(65, 20)
  priceCoin           String
  fee                 Decimal               @db.Decimal(65, 20)
  feeCoin             String
  time                DateTime
  fileId              BigInt
  file                File                  @relation(fields: [fileId], references: [id])
  transactionTaxEvent TransactionTaxEvent[]
}

model TransactionTaxEvent {
  id             BigInt                  @id @default(autoincrement()) @db.BigInt
  type           TransactionTaxEventType
  gainInFiat     Decimal                 @db.Decimal(65, 20)
  expensesInFiat Decimal                 @db.Decimal(65, 20)
  transactionId  BigInt
  transaction    Transaction             @relation(fields: [transactionId], references: [id])
}

model Transfer {
  id      BigInt   @id @default(autoincrement()) @db.BigInt
  fee     Decimal  @db.Decimal(65, 20)
  feeCoin String
  time    DateTime
  fileId  BigInt
  file    File     @relation(fields: [fileId], references: [id])
}

model Earn {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  amount     Decimal  @db.Decimal(65, 20)
  amountCoin String
  time       DateTime
  fileId     BigInt
  file       File     @relation(fields: [fileId], references: [id])
}

model CoinPairPriceHistoryKraken {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  time       DateTime
  openPrice  Decimal  @db.Decimal(65, 20)
  closePrice Decimal  @db.Decimal(65, 20)
  coinPair   String
}

model CoinPairPriceHistory {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  time       DateTime
  price      Decimal  @db.Decimal(65, 20)
  url        String
  coinPairId BigInt
  coinPair   CoinPair @relation(fields: [coinPairId], references: [id])

  @@unique([time, coinPairId], name: "time_coinPairId_unique")
}

model CoinPair {
  id               BigInt                 @id @default(autoincrement()) @db.BigInt
  pair             String                 @unique
  pairPriceHistory CoinPairPriceHistory[]
}

enum TaxMethod {
  AVCO
}

enum Fiat {
  EUR
}

enum TransactionTaxEventType {
  FEE
  BUY
}
